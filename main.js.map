{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/modules/text-editor/components/control-panel-action-group/control-panel-action-group.component.css","webpack:///./src/app/modules/text-editor/components/control-panel-action-group/control-panel-action-group.component.html","webpack:///./src/app/modules/text-editor/components/control-panel-action-group/control-panel-action-group.component.ts","webpack:///./src/app/modules/text-editor/components/control-panel/control-panel.component.css","webpack:///./src/app/modules/text-editor/components/control-panel/control-panel.component.html","webpack:///./src/app/modules/text-editor/components/control-panel/control-panel.component.ts","webpack:///./src/app/modules/text-editor/components/editor/editor.component.css","webpack:///./src/app/modules/text-editor/components/editor/editor.component.html","webpack:///./src/app/modules/text-editor/components/editor/editor.component.ts","webpack:///./src/app/modules/text-editor/components/file/file.component.css","webpack:///./src/app/modules/text-editor/components/file/file.component.html","webpack:///./src/app/modules/text-editor/components/file/file.component.ts","webpack:///./src/app/modules/text-editor/components/index.ts","webpack:///./src/app/modules/text-editor/plugins/color-picker-action/color-picker-action.manifest.ts","webpack:///./src/app/modules/text-editor/plugins/color-picker-action/components/color-picker-action/color-picker-action.component.html","webpack:///./src/app/modules/text-editor/plugins/color-picker-action/components/color-picker-action/color-picker-action.component.ts","webpack:///./src/app/modules/text-editor/plugins/index.ts","webpack:///./src/app/modules/text-editor/plugins/simple-action/components/simple-action/simple-action.component.html","webpack:///./src/app/modules/text-editor/plugins/simple-action/components/simple-action/simple-action.component.ts","webpack:///./src/app/modules/text-editor/plugins/simple-action/simple-action-plugin.manifest.ts","webpack:///./src/app/modules/text-editor/plugins/synonyms-action/components/synonyms-action/synonyms-action.component.css","webpack:///./src/app/modules/text-editor/plugins/synonyms-action/components/synonyms-action/synonyms-action.component.html","webpack:///./src/app/modules/text-editor/plugins/synonyms-action/components/synonyms-action/synonyms-action.component.ts","webpack:///./src/app/modules/text-editor/plugins/synonyms-action/services/synonyms/synonyms.service.ts","webpack:///./src/app/modules/text-editor/plugins/synonyms-action/synonyms-action-plugin.manifest.ts","webpack:///./src/app/modules/text-editor/services/editor-action/editor-action.service.ts","webpack:///./src/app/modules/text-editor/services/editor-state/editor-state.service.ts","webpack:///./src/app/modules/text-editor/services/index.ts","webpack:///./src/app/modules/text-editor/text-editor.module.ts","webpack:///./src/app/modules/text-editor/tokens/editor-plugin-manifest/editor-plugin-manifest.token.ts","webpack:///./src/app/shared/components/body/body.component.css","webpack:///./src/app/shared/components/body/body.component.html","webpack:///./src/app/shared/components/body/body.component.ts","webpack:///./src/app/shared/components/header/header.component.css","webpack:///./src/app/shared/components/header/header.component.html","webpack:///./src/app/shared/components/header/header.component.ts","webpack:///./src/app/shared/services/text-service/text.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,yBAAyB,oBAAoB,mBAAmB,6BAA6B,KAAK,K;;;;;;;;;;;ACAlG,2F;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,oBAAoB,CAAC;IAC/B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACM;AAC+B;AACjC;AAC6B;AACF;AACE;AAgB1E;IAAA;IACA,CAAC;IADY,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,0FAAe;gBACf,oFAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,sFAAc;aACf;YACD,SAAS,EAAE,CAAC,sFAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;;;;;ACvBtB,wCAAwC,oBAAoB,qBAAqB,KAAK,yCAAyC,uBAAuB,KAAK,+BAA+B,uBAAuB,mBAAmB,yBAAyB,qBAAqB,mCAAmC,oBAAoB,sBAAsB,KAAK,qCAAqC,0BAA0B,KAAK,sCAAsC,0BAA0B,KAAK,qCAAqC,oBAAoB,KAAK,K;;;;;;;;;;;ACA3iB,kH;;;;;;;;;;;;;;;;;;;;;;;;ACUuB;AASvB;IAKE,4CAAoB,QAAkC,EAAU,QAAmB;QAA/D,aAAQ,GAAR,QAAQ,CAA0B;QAAU,aAAQ,GAAR,QAAQ,CAAW;IACnF,CAAC;IAED,qDAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM;YACzB,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,kEAAqB,GAA7B,UAA8B,SAAoB,EAAE,MAAU;QAC5D,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QACjE,IAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;IACjF,CAAC;IAlBQ;QAAR,2DAAK,EAAE;;uEAA6B;IAEe;QAAnD,+DAAS,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,8DAAgB,EAAE,CAAC;kCAAmB,8DAAgB;gFAAC;IAH5E,kCAAkC;QAN9C,+DAAS,CAAC;YACT,QAAQ,EAAE,gCAAgC;;;YAG1C,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAM8B,sEAAwB,EAAoB,uDAAS;OALxE,kCAAkC,CAoB9C;IAAD,yCAAC;CAAA;AApB8C;;;;;;;;;;;;ACnB/C,yBAAyB,6BAA6B,mBAAmB,oBAAoB,0BAA0B,6BAA6B,uBAAuB,KAAK,yBAAyB,mBAAmB,0BAA0B,oBAAoB,KAAK,yEAAyE,uDAAuD,KAAK,K;;;;;;;;;;;ACApZ,4P;;;;;;;;;;;;;;;;;;;;;;;;ACAiD;AAQjD;IAAA;IAEA,CAAC;IADU;QAAR,2DAAK,EAAE;;2DAAiD;IAD9C,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;OACW,uBAAuB,CAEnC;IAAD,8BAAC;CAAA;AAFmC;;;;;;;;;;;;ACRpC,yBAAyB,oBAAoB,mBAAmB,6BAA6B,KAAK,K;;;;;;;;;;;ACAlG,6FAA6F,MAAM,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1C;AACzB;AAEsB;AAIoB;AAQ1E;IAOE,2BAAuD,OAA2B;QAA3B,YAAO,GAAP,OAAO,CAAoB;QANzE,SAAI,GAAG,EAAE,CAAC;QAEnB,WAAM,GAA4C,qDAAO,CAAC,UAAC,MAAM;YAC/D,OAAO,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAGjB,CAAC;IAPQ;QAAR,2DAAK,EAAE;;mDAAW;IADR,iBAAiB;QAN7B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;YAGtB,SAAS,EAAE,CAAE,8DAAoB,CAAE,CAAC,gDAAgD;SACrF,CAAC;QAQa,uEAAM,CAAC,qHAAyB,CAAC;;OAPnC,iBAAiB,CAS7B;IAAD,wBAAC;CAAA;AAT6B;;;;;;;;;;;;ACf9B,yBAAyB,gCAAgC,mBAAmB,oBAAoB,6BAA6B,0BAA0B,mBAAmB,KAAK,eAAe,mBAAmB,mBAAmB,6BAA6B,gCAAgC,oBAAoB,KAAK,K;;;;;;;;;;;ACA1T,iJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAuG;AAC5D;AACW;AAOtD;IAIE,yBACU,QAAmB,EACD,QAAkB,EACpC,kBAAwC;QAFxC,aAAQ,GAAR,QAAQ,CAAW;QACD,aAAQ,GAAR,QAAQ,CAAU;QACpC,uBAAkB,GAAlB,kBAAkB,CAAsB;IAElD,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,iCAAO,GAAP;QACE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IAChF,CAAC;IAED,4CAAkB,GAAlB;QAAA,iBAIC;QAHC,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,iBAAiB,EAAE;YAC1F,KAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAW,GAAX;QACE,IAAI,IAAI,CAAC,6BAA6B,EAAE;YACtC,IAAI,CAAC,6BAA6B,EAAE,CAAC;SACtC;IACH,CAAC;IA5B0B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,wDAAU;yDAAC;IADzC,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;QAOG,uEAAM,CAAC,wDAAQ,CAAC;yCADC,uDAAS;YACS,QAAQ;YAChB,8DAAoB;OAPvC,eAAe,CA8B3B;IAAD,sBAAC;CAAA;AA9B2B;;;;;;;;;;;;;ACT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkF;AAC1B;AACd;AACJ;;;;;;;;;;;;;ACHtC;AAAA;AAAA;AAAA;AAG0E;AACoC;AAG9G,IAAM,6BAA6B,GAAmD;IACpF,SAAS,EAAE,0HAA4B;IACvC,OAAO,EAAE,GAAG;CACb,CAAC;AAEK,IAAM,+BAA+B,GAAa,yHAAqB,CAAC,6BAA6B,CAAC,CAAC;;;;;;;;;;;;ACZ9G,4TAA4T,MAAM,oB;;;;;;;;;;;;;;;;;;;;;;;;;ACArQ;AAEuC;AAMpG;IAOE,sCACU,kBAAwC,EACxC,mBAA0C;QAD1C,uBAAkB,GAAlB,kBAAkB,CAAsB;QACxC,wBAAmB,GAAnB,mBAAmB,CAAuB;QARpD,SAAI,GAAG,mBAAmB,CAAC;QAGnB,gBAAW,GAAG,yDAAe,CAAC,SAAS,CAAC;IAOhD,CAAC;IAED,+CAAQ,GAAR,UAAS,KAAa;QACpB,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,yDAAe,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACzE,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAC9D,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,yDAAe,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IAC5E,CAAC;IAED,+CAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC;YAClF,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAW,GAAX;QACE,IAAI,IAAI,CAAC,2BAA2B,EAAE;YACpC,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;SAChD;IACH,CAAC;IA7BU,4BAA4B;QAJxC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;SAEpC,CAAC;yCAS8B,8DAAoB;YACnB,+DAAqB;OATzC,4BAA4B,CA8BxC;IAAD,mCAAC;CAAA;AA9BwC;;;;;;;;;;;;;ACPzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2F;AACU;AACL;AACW;AACuB;AACf;AAE5G,IAAM,qBAAqB,GAAG;IACnC,uHAAuB,EAAE,8IAA4B,EAAE,+HAAyB;CACjF,CAAC;AAEK,IAAM,oBAAoB,GAC5B,uGAA0B;IAC7B,iHAA+B;IAC/B,4GAA2B;EAC5B,CAAC;;;;;;;;;;;;AChBF,4IAA4I,MAAM,gB;;;;;;;;;;;;;;;;;;;;;;;;;ACA9E;AAEgC;AAMpG;IAQE,iCACU,kBAAwC,EACxC,mBAA0C;QAD1C,uBAAkB,GAAlB,kBAAkB,CAAsB;QACxC,wBAAmB,GAAnB,mBAAmB,CAAuB;IAEpD,CAAC;IAED,yCAAO,GAAP;QACE,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzD,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC;YAClF,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,IAAI,CAAC,2BAA2B,EAAE;YACpC,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;SAChD;IACH,CAAC;IA3BQ;QAAR,2DAAK,EAAE;;gEAA8B;IAC7B;QAAR,2DAAK,EAAE;;yDAAc;IAFX,uBAAuB;QAJnC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;SAE9B,CAAC;yCAU8B,8DAAoB;YACnB,+DAAqB;OAVzC,uBAAuB,CA6BnC;IAAD,8BAAC;CAAA;AA7BmC;;;;;;;;;;;;;ACRpC;AAAA;AAAA;AAAA;AAAA;AAG0E;AACmB;AAC5C;AAGjD,IAAM,yBAAyB,GAAG,CAAC,CAAC;AACpC,IAAM,yBAAyB,GAAG,CAAC,CAAC;AACpC,IAAM,2BAA2B,GAAG,CAAC,CAAC;AAEtC,IAAM,uBAAuB,GAA8C;IACzE,SAAS,EAAE,yGAAuB;IAClC,gBAAgB,EAAE;QAChB,WAAW,EAAE,yDAAe,CAAC,IAAI;QACjC,IAAI,EAAE,aAAa;KACpB;CACF,CAAC;AACF,IAAM,yBAAyB,GAA8C;IAC3E,SAAS,EAAE,yGAAuB;IAClC,gBAAgB,EAAE;QAChB,WAAW,EAAE,yDAAe,CAAC,MAAM;QACnC,IAAI,EAAE,eAAe;KACtB;CACF,CAAC;AACF,IAAM,4BAA4B,GAA8C;IAC9E,SAAS,EAAE,yGAAuB;IAClC,gBAAgB,EAAE;QAChB,WAAW,EAAE,yDAAe,CAAC,SAAS;QACtC,IAAI,EAAE,kBAAkB;KACzB;CACF,CAAC;AACF,IAAM,iCAAiC,GAA8C;IACnF,SAAS,EAAE,yGAAuB;IAClC,gBAAgB,EAAE;QAChB,WAAW,EAAE,yDAAe,CAAC,aAAa;QAC1C,IAAI,EAAE,sBAAsB;KAC7B;CACF,CAAC;AAEF,IAAM,gCAAgC,GAA8C;IAClF,OAAO,EAAE,yBAAyB;IAClC,SAAS,EAAE,yGAAuB;IAClC,gBAAgB,EAAE;QAChB,WAAW,EAAE,yDAAe,CAAC,WAAW;QACxC,IAAI,EAAE,sBAAsB;KAC7B;CACF,CAAC;AACF,IAAM,6BAA6B,GAA8C;IAC/E,OAAO,EAAE,yBAAyB;IAClC,SAAS,EAAE,yGAAuB;IAClC,gBAAgB,EAAE;QAChB,WAAW,EAAE,yDAAe,CAAC,WAAW;QACxC,IAAI,EAAE,mBAAmB;KAC1B;CACF,CAAC;AACF,IAAM,+BAA+B,GAA8C;IACjF,OAAO,EAAE,yBAAyB;IAClC,SAAS,EAAE,yGAAuB;IAClC,gBAAgB,EAAE;QAChB,WAAW,EAAE,yDAAe,CAAC,aAAa;QAC1C,IAAI,EAAE,qBAAqB;KAC5B;CACF,CAAC;AACF,IAAM,8BAA8B,GAA8C;IAChF,OAAO,EAAE,yBAAyB;IAClC,SAAS,EAAE,yGAAuB;IAClC,gBAAgB,EAAE;QAChB,WAAW,EAAE,yDAAe,CAAC,YAAY;QACzC,IAAI,EAAE,oBAAoB;KAC3B;CACF,CAAC;AACF,IAAM,kCAAkC,GAA8C;IACpF,OAAO,EAAE,yBAAyB;IAClC,SAAS,EAAE,yGAAuB;IAClC,gBAAgB,EAAE;QAChB,WAAW,EAAE,yDAAe,CAAC,MAAM;QACnC,IAAI,EAAE,wBAAwB;KAC/B;CACF,CAAC;AACF,IAAM,kCAAkC,GAA8C;IACpF,OAAO,EAAE,yBAAyB;IAClC,SAAS,EAAE,yGAAuB;IAClC,gBAAgB,EAAE;QAChB,WAAW,EAAE,yDAAe,CAAC,OAAO;QACpC,IAAI,EAAE,wBAAwB;KAC/B;CACF,CAAC;AACF,IAAM,+BAA+B,GAA8C;IACjF,OAAO,EAAE,2BAA2B;IACpC,SAAS,EAAE,yGAAuB;IAClC,gBAAgB,EAAE;QAChB,WAAW,EAAE,yDAAe,CAAC,YAAY;QACzC,IAAI,EAAE,cAAc;KACrB;CACF,CAAC;AAEK,IAAM,0BAA0B,GAAe;IACpD,yHAAqB,CAAC,uBAAuB,CAAC;IAC9C,yHAAqB,CAAC,yBAAyB,CAAC;IAChD,yHAAqB,CAAC,4BAA4B,CAAC;IACnD,yHAAqB,CAAC,iCAAiC,CAAC;IAExD,yHAAqB,CAAC,gCAAgC,CAAC;IACvD,yHAAqB,CAAC,6BAA6B,CAAC;IACpD,yHAAqB,CAAC,+BAA+B,CAAC;IACtD,yHAAqB,CAAC,8BAA8B,CAAC;IAErD,yHAAqB,CAAC,kCAAkC,CAAC;IACzD,yHAAqB,CAAC,kCAAkC,CAAC;IAEzD,yHAAqB,CAAC,+BAA+B,CAAC;CACvD,CAAC;;;;;;;;;;;;ACjHF,iCAAiC,yBAAyB,0BAA0B,gCAAgC,sCAAsC,KAAK,gBAAgB,uBAAuB,iBAAiB,gBAAgB,uBAAuB,KAAK,gBAAgB,uBAAuB,mBAAmB,kBAAkB,iCAAiC,sBAAsB,sBAAsB,uBAAuB,oCAAoC,KAAK,sBAAsB,0BAA0B,KAAK,gBAAgB,gCAAgC,oCAAoC,sBAAsB,mBAAmB,KAAK,K;;;;;;;;;;;ACAnpB,yOAAyO,gBAAgB,wC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1J;AACZ;AACK;AACJ;AAErD;AAO/B;IAOE,mCACU,kBAAwC,EACxC,mBAA0C,EAC1C,eAAkC,EAClC,QAAmB;QAHnB,uBAAkB,GAAlB,kBAAkB,CAAsB;QACxC,wBAAmB,GAAnB,mBAAmB,CAAuB;QAC1C,oBAAe,GAAf,eAAe,CAAmB;QAClC,aAAQ,GAAR,QAAQ,CAAW;IAE7B,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,4CAAQ,GAAR,UAAS,OAAe;QACtB,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,+CAAW,GAAX;QACE,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;IACH,CAAC;IAEO,sDAAkB,GAA1B;QAAA,iBAUC;QATC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC,IAAI,CAC7D,mEAAY,CAAC,GAAG,CAAC,EACjB,0DAAG,CAAC,mBAAS,IAAI,gBAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,EAA3B,CAA2B,CAAC,EAC7C,2EAAoB,EAAE,EACtB,gEAAS,CAAC,sBAAY,IAAI,YAAI,CAAC,eAAe,CAAC,WAAW,CAAC,YAAY,CAAC,EAA9C,CAA8C,CAAC,CAC1E,CAAC,SAAS,CAAC,UAAC,QAAqB;YAChC,KAAI,CAAC,QAAQ,GAAG,oDAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,IAAI,EAAZ,CAAY,EAAE,QAAQ,CAAC,CAAC;YAC1D,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,sDAAkB,GAA1B;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACjE,IAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;QACtD,IAAI,EAAE,IAAI,SAAS,CAAC,UAAU,EAAE;YAC9B,IAAM,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,KAAK,EAAE;gBACT,IAAM,IAAI,GAAG,KAAK,CAAC,qBAAqB,EAAE,CAAC;gBAC3C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAK,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,OAAI,CAAC,CAAC;gBACrE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAK,IAAI,CAAC,IAAI,GAAG,CAAC,OAAI,CAAC,CAAC;aAC1D;SACF;IACH,CAAC;IApDkB;QAAlB,+DAAS,CAAC,MAAM,CAAC;kCAAO,wDAAU;2DAAC;IADzB,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAS8B,8DAAoB;YACnB,+DAAqB;YACzB,qFAAiB;YACxB,uDAAS;OAXlB,yBAAyB,CAsDrC;IAAD,gCAAC;CAAA;AAtDqC;;;;;;;;;;;;;;;;;;;;;;;;;;ACZK;AACO;AAGlD,IAAM,YAAY,GAAG,gCAAgC,CAAC;AAStD;IACE,2BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,uCAAW,GAAX,UAAY,IAAY;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,YAAY,EAAE;YAC9C,MAAM,EAAE;gBACN,OAAO,EAAE,IAAI;aACd;SACF,CAAC,CAAC;IACL,CAAC;IAVU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAE0B,+DAAU;OADzB,iBAAiB,CAW7B;IAAD,wBAAC;CAAA;AAX6B;;;;;;;;;;;;;ACb9B;AAAA;AAAA;AAAA;AAG0E;AACyB;AAGnG,IAAM,2BAA2B,GAAgD;IAC/E,SAAS,EAAE,+GAAyB;IACpC,OAAO,EAAE,GAAG;CACb,CAAC;AAEK,IAAM,2BAA2B,GAAa,yHAAqB,CAAC,2BAA2B,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZrD;AACR;AAE3C,IAAY,eAcX;AAdD,WAAY,eAAe;IACzB,gCAAa;IACb,oCAAiB;IACjB,oCAAiB;IACjB,kDAA+B;IAC/B,8CAA2B;IAC3B,8CAA2B;IAC3B,gDAA6B;IAC7B,sCAAmB;IACnB,gDAA6B;IAC7B,kDAA+B;IAC/B,0CAAuB;IACvB,0CAAuB;IACvB,gDAA6B;AAC/B,CAAC,EAdW,eAAe,KAAf,eAAe,QAc1B;AAKD;IAEE,+BAAsC,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IACxD,CAAC;IAED,2CAAW,GAAX,UAAY,OAAwB,EAAE,KAAW;QAC/C,IAAM,KAAK,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC7C,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAChE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAChC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,iDAAiB,GAAjB,UAAkB,OAAwB;QACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IAED,iDAAiB,GAAjB,UAAkB,OAAwB;QACxC,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IAED,mDAAmB,GAAnB,UAAoB,IAAY;QAC9B,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC/C,IAAI,SAAS,CAAC,UAAU,EAAE;YACxB,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE;gBACxC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;aAClE;YAED,IAAM,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACtC,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;SACtD;IACH,CAAC;IAEO,uDAAuB,GAA/B;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC/C,IAAI,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,OAAO,IAAI,SAAS,CAAC,UAAU,IAAI,SAAS,CAAC,UAAU,EAAE;YAC3F,OAAO,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAChC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,mDAAmB,GAA3B,UAA4B,KAAa;QACvC,IAAI,KAAK,EAAE;YACT,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;YAC/C,SAAS,CAAC,eAAe,EAAE,CAAC;YAC5B,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC3B;IACH,CAAC;IA/CU,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;QAGa,uEAAM,CAAC,wDAAQ,CAAC;yCAAmB,QAAQ;OAF7C,qBAAqB,CAgDjC;IAAD,4BAAC;CAAA;AAhDiC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBS;AACQ;AACX;AAGxC;IAIE;QAHQ,YAAO,GAA4B,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;QAC3D,cAAS,GAA+B,IAAI,oDAAe,CAAC,SAAS,CAAC,CAAC;IAG/E,CAAC;IAED,yCAAU,GAAV;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,yCAAU,GAAV,UAAW,OAAe;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAED,2CAAY,GAAZ;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,6DAAM,CAAC,UAAC,KAAK,IAAK,cAAO,CAAC,KAAK,CAAC,EAAd,CAAc,CAAC,CAClC,CAAC;IACJ,CAAC;IAED,mDAAoB,GAApB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IACnC,CAAC;IAED,2CAAY,GAAZ,UAAa,SAAoB;QAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACjC,CAAC;IA3BU,oBAAoB;QADhC,gEAAU,EAAE;;OACA,oBAAoB,CA4BhC;IAAD,2BAAC;CAAA;AA5BgC;;;;;;;;;;;;;ACLjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDX;AACM;AACS;AACH;AAO/B;AACkD;AAqBxE;IAAA;IACA,CAAC;IADY,cAAc;QAnB1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,qEAAgB;gBAChB,kEAAiB;aAClB;YACD,YAAY;gBACV,2DAAe;gBACf,mEAAuB;gBACvB,6DAAiB;gBACjB,8EAAkC;qBAC/B,8DAAqB,CACzB;YACD,OAAO,EAAE,CAAE,6DAAiB,CAAE;YAC9B,eAAe,EAAO,8DAAqB,QAAE;YAC7C,SAAS,EACJ,6DAAoB,QACxB;SACF,CAAC;OACW,cAAc,CAC1B;IAAD,qBAAC;CAAA;AAD0B;;;;;;;;;;;;;AChC3B;AAAA;AAAA;AAAA;AAA+D;AAQxD,IAAM,yBAAyB,GAAG,IAAI,4DAAc,CAAqB,2BAA2B,CAAC,CAAC;AAEtG,+BAA+B,cAAgC;IACpE,OAAO;QACL,OAAO,EAAE,yBAAyB;QAClC,KAAK,EAAE,IAAI;QACX,QAAQ,EAAE,cAAc;KACzB,CAAC;AACJ,CAAC;;;;;;;;;;;;AChBD,yBAAyB,oBAAoB,mBAAmB,KAAK,cAAc,oBAAoB,6BAA6B,cAAc,KAAK,K;;;;;;;;;;;ACAvJ,uF;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACqB;AAOvE;IAGE,uBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAEC;QADC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,cAAI,IAAI,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CAAC;IAChE,CAAC;IARU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAIiC,+EAAW;OAHjC,aAAa,CASzB;IAAD,oBAAC;CAAA;AATyB;;;;;;;;;;;;ACR1B,yBAAyB,qBAAqB,mBAAmB,yBAAyB,wBAAwB,sBAAsB,uCAAuC,8CAA8C,kBAAkB,KAAK,K;;;;;;;;;;;ACApP,0BAA0B,OAAO,Y;;;;;;;;;;;;;;;;;;;;;;;;ACAgB;AAOjD;IALA;QAMW,UAAK,GAAG,EAAE,CAAC;IACtB,CAAC;IADU;QAAR,2DAAK,EAAE;;kDAAY;IADT,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;OACW,eAAe,CAE3B;IAAD,sBAAC;CAAA;AAF2B;;;;;;;;;;;;;;;;;;;;;;ACPe;AAG3C;IAAA;IAUA,CAAC;IATC,iCAAW,GAAX;QACE,OAAO,IAAI,OAAO,CAAS,UAAU,OAAO;YAC1C,OAAO,CAAC,iFAAiF;gBACvF,kGAAkG;gBAClG,iIAAiI;gBACjI,yHAAyH;gBACzH,8FAA8F,CAAC,CAAC;QACpG,CAAC,CAAC,CAAC;IACL,CAAC;IATU,WAAW;QADvB,gEAAU,EAAE;OACA,WAAW,CAUvB;IAAD,kBAAC;CAAA;AAVuB;;;;;;;;;;;;;ACHxB;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \":host {\\r\\n  display: flex;\\r\\n  height: 100%;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\"","module.exports = \"<app-header [title]=\\\"title\\\"></app-header>\\r\\n<app-body></app-body>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Simple Text Editor';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './shared/components/header/header.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TextService } from './shared/services/text-service/text.service';\r\nimport { BodyComponent } from './shared/components/body/body.component';\r\nimport { TxEditorModule } from './modules/text-editor/text-editor.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    BodyComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    TxEditorModule\r\n  ],\r\n  providers: [TextService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \".editor-action-group {\\r\\n  display: flex;\\r\\n  padding: 0 5px;\\r\\n}\\r\\n\\r\\n.editor-action + .editor-action {\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n.editor-action-button {\\r\\n  background: none;\\r\\n  border: none;\\r\\n  border-radius: 4px;\\r\\n  padding: 0 2px;\\r\\n  color: rgba(50, 50, 50, 0.9);\\r\\n  display: flex;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.editor-action-button:hover {\\r\\n  background: #e9e9e9;\\r\\n}\\r\\n\\r\\n.editor-action-button.active {\\r\\n  background: #bebebe;\\r\\n}\\r\\n\\r\\n.editor-action-button:focus {\\r\\n  outline: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"editor-action-group\\\">\\r\\n  <ng-container #container></ng-container>\\r\\n</div>\\r\\n\"","import {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  Input,\r\n  OnInit,\r\n  Renderer2,\r\n  Type,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { TxPluginManifest } from '../../tokens/editor-plugin-manifest/editor-plugin-manifest.token';\r\n\r\n@Component({\r\n  selector: 'app-control-panel-action-group',\r\n  templateUrl: './control-panel-action-group.component.html',\r\n  styleUrls: [ './control-panel-action-group.component.css' ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TxControlPanelActionGroupComponent implements OnInit {\r\n  @Input() plugins: TxPluginManifest[];\r\n\r\n  @ViewChild('container', { read: ViewContainerRef }) viewContainerRef: ViewContainerRef;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver, private renderer: Renderer2) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.plugins.forEach(plugin => {\r\n      this.renderPluginComponent(plugin.component, plugin.componentOptions);\r\n    });\r\n  }\r\n\r\n  private renderPluginComponent(component: Type<any>, inputs: {}): void {\r\n    const factory = this.resolver.resolveComponentFactory(component);\r\n    const childComponent = this.viewContainerRef.createComponent(factory);\r\n    Object.assign(childComponent.instance, inputs);\r\n    this.renderer.addClass(childComponent.location.nativeElement, 'editor-action');\r\n  }\r\n}\r\n","module.exports = \":host {\\r\\n  background-color: #fff;\\r\\n  height: 30px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  flex-direction: column;\\r\\n  padding-top: 5px;\\r\\n}\\r\\n\\r\\n.editor-actions {\\r\\n  width: 200px;\\r\\n  margin-right: 420px;\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\napp-control-panel-action-group + app-control-panel-action-group {\\r\\n  border-left: 1px solid rgba(100, 121, 143, 0.20);\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"editor-actions\\\">\\r\\n  <app-control-panel-action-group\\r\\n    class=\\\"action-group\\\"\\r\\n    *ngFor=\\\"let group of groups | keyvalue\\\"\\r\\n    [plugins]=\\\"group.value\\\"\\r\\n  ></app-control-panel-action-group>\\r\\n</div>\\r\\n\"","import { Component, Input } from '@angular/core';\r\nimport { TxPluginManifest } from '../../tokens/editor-plugin-manifest/editor-plugin-manifest.token';\r\n\r\n@Component({\r\n  selector: 'app-control-panel',\r\n  templateUrl: './control-panel.component.html',\r\n  styleUrls: [ './control-panel.component.css' ]\r\n})\r\nexport class TxControlPanelComponent {\r\n  @Input() groups: { [ key: string ]: TxPluginManifest[] };\r\n}\r\n","module.exports = \":host {\\r\\n  display: flex;\\r\\n  height: 100%;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\"","module.exports = \"<app-control-panel [groups]=\\\"groups\\\"></app-control-panel>\\r\\n<app-file>{{text}}</app-file>\\r\\n\"","import { Component, Inject, Input } from '@angular/core';\r\nimport { groupBy } from 'ramda';\r\n\r\nimport { TxEditorStateService } from '../../services';\r\nimport {\r\n  TX_EDITOR_PLUGIN_MANIFEST,\r\n  TxPluginManifest\r\n} from '../../tokens/editor-plugin-manifest/editor-plugin-manifest.token';\r\n\r\n@Component({\r\n  selector: 'app-editor',\r\n  templateUrl: './editor.component.html',\r\n  styleUrls: [ './editor.component.css' ],\r\n  providers: [ TxEditorStateService ] // Each editor should have its own state service\r\n})\r\nexport class TxEditorComponent {\r\n  @Input() text = '';\r\n\r\n  groups: { [ key: string ]: TxPluginManifest[] } = groupBy((plugin) => {\r\n    return String(plugin.groupID != null ? plugin.groupID : 0);\r\n  }, this.plugins);\r\n\r\n  constructor(@Inject(TX_EDITOR_PLUGIN_MANIFEST) private plugins: TxPluginManifest[]) {\r\n  }\r\n}\r\n","module.exports = \":host {\\r\\n  background-color: #f1f0f0;\\r\\n  flex-grow: 1;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  padding: 5px;\\r\\n}\\r\\n\\r\\n.file {\\r\\n  width: 600px;\\r\\n  flex-grow: 1;\\r\\n  background-color: #fff;\\r\\n  border: 1px solid #e4dede;\\r\\n  padding: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"file\\\" contenteditable=\\\"true\\\" (input)=\\\"onInput()\\\" #editableArea>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, Inject, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { TxEditorStateService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'app-file',\r\n  templateUrl: './file.component.html',\r\n  styleUrls: [ './file.component.css' ]\r\n})\r\nexport class TxBodyComponent implements OnInit, OnDestroy {\r\n  @ViewChild('editableArea') editableArea: ElementRef;\r\n  private removeSelectionChangeListener: Function;\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private editorStateService: TxEditorStateService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.listenForSelection();\r\n  }\r\n\r\n  onInput(): void {\r\n    this.editorStateService.setContent(this.editableArea.nativeElement.innerHTML);\r\n  }\r\n\r\n  listenForSelection(): void {\r\n    this.removeSelectionChangeListener = this.renderer.listen(this.document, 'selectionchange', () => {\r\n      this.editorStateService.setSelection(this.document.getSelection());\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.removeSelectionChangeListener) {\r\n      this.removeSelectionChangeListener();\r\n    }\r\n  }\r\n}\r\n","export * from './control-panel-action-group/control-panel-action-group.component';\r\nexport * from './control-panel/control-panel.component';\r\nexport * from './editor/editor.component';\r\nexport * from './file/file.component';\r\n","import {\r\n  providePluginManifest,\r\n  TxPluginManifest\r\n} from '../../tokens/editor-plugin-manifest/editor-plugin-manifest.token';\r\nimport { TxColorPickerActionComponent } from './components/color-picker-action/color-picker-action.component';\r\nimport { Provider } from '@angular/core';\r\n\r\nconst TX_FORE_COLOR_ACTION_MANIFEST: TxPluginManifest<TxColorPickerActionComponent> = {\r\n  component: TxColorPickerActionComponent,\r\n  groupID: 0.1\r\n};\r\n\r\nexport const TX_COLOR_PICKER_ACTION_PROVIDER: Provider = providePluginManifest(TX_FORE_COLOR_ACTION_MANIFEST);\r\n","module.exports = \"<button class=\\\"editor-action-button\\\"\\n        [colorPicker]=\\\"color\\\"\\n        (colorPickerSelect)=\\\"onSelect($event)\\\"\\n        [cpCancelButton]=\\\"true\\\"\\n        [cpAlphaChannel]=\\\"'disabled'\\\"\\n        [cpOKButton]=\\\"true\\\"\\n        [style.color]=\\\"color\\\"\\n>\\n  <i class=\\\"material-icons\\\">{{icon}}</i>\\n</button>\\n\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TxEditorActionService, TxEditorCommand, TxEditorStateService } from '../../../../services';\n\n@Component({\n  selector: 'app-color-picker-action',\n  templateUrl: './color-picker-action.component.html'\n})\nexport class TxColorPickerActionComponent implements OnInit, OnDestroy {\n  icon = 'format_color_text';\n  color: string;\n\n  private commandName = TxEditorCommand.ForeColor;\n  private selectionChangeSubscription: Subscription;\n\n  constructor(\n    private editorStateService: TxEditorStateService,\n    private editorActionService: TxEditorActionService\n  ) {\n  }\n\n  onSelect(color: string): void {\n    this.editorActionService.execCommand(TxEditorCommand.StyleWithCSS, true);\n    this.editorActionService.execCommand(this.commandName, color);\n    this.editorActionService.execCommand(TxEditorCommand.StyleWithCSS, false);\n  }\n\n  ngOnInit(): void {\n    this.selectionChangeSubscription = this.editorStateService.getSelection().subscribe(() => {\n      this.color = this.editorActionService.queryCommandValue(this.commandName);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.selectionChangeSubscription) {\n      this.selectionChangeSubscription.unsubscribe();\n    }\n  }\n}\n","import { Provider } from '@angular/core';\r\nimport { TX_SIMPLE_ACTION_PROVIDERS } from './simple-action/simple-action-plugin.manifest';\r\nimport { TX_COLOR_PICKER_ACTION_PROVIDER } from './color-picker-action/color-picker-action.manifest';\r\nimport { TX_SYNONYMS_ACTION_PROVIDER } from './synonyms-action/synonyms-action-plugin.manifest';\r\nimport { TxSimpleActionComponent } from './simple-action/components/simple-action/simple-action.component';\r\nimport { TxColorPickerActionComponent } from './color-picker-action/components/color-picker-action/color-picker-action.component';\r\nimport { TxSynonymsActionComponent } from './synonyms-action/components/synonyms-action/synonyms-action.component';\r\n\r\nexport const TX_PLUGINS_COMPONENTS = [\r\n  TxSimpleActionComponent, TxColorPickerActionComponent, TxSynonymsActionComponent\r\n];\r\n\r\nexport const TX_PLUGINS_PROVIDERS: Provider[] = [\r\n  ...TX_SIMPLE_ACTION_PROVIDERS,\r\n  TX_COLOR_PICKER_ACTION_PROVIDER,\r\n  TX_SYNONYMS_ACTION_PROVIDER\r\n];\r\n","module.exports = \"<button (click)=\\\"onClick()\\\" [class.active]=\\\"isActive\\\" class=\\\"editor-action-button\\\"><i\\n  class=\\\"material-icons\\\">{{icon}}</i></button>\\n\"","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TxEditorActionService, TxEditorCommand, TxEditorStateService } from '../../../../services';\n\n@Component({\n  selector: 'app-simple-action',\n  templateUrl: './simple-action.component.html'\n})\nexport class TxSimpleActionComponent implements OnInit, OnDestroy {\n  @Input() commandName: TxEditorCommand;\n  @Input() icon: string;\n\n  isActive: boolean;\n\n  private selectionChangeSubscription: Subscription;\n\n  constructor(\n    private editorStateService: TxEditorStateService,\n    private editorActionService: TxEditorActionService\n  ) {\n  }\n\n  onClick(): void {\n    this.editorActionService.execCommand(this.commandName);\n  }\n\n  ngOnInit(): void {\n    this.selectionChangeSubscription = this.editorStateService.getSelection().subscribe(() => {\n      this.isActive = this.editorActionService.queryCommandState(this.commandName);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.selectionChangeSubscription) {\n      this.selectionChangeSubscription.unsubscribe();\n    }\n  }\n}\n","import {\r\n  providePluginManifest,\r\n  TxPluginManifest\r\n} from '../../tokens/editor-plugin-manifest/editor-plugin-manifest.token';\r\nimport { TxSimpleActionComponent } from './components/simple-action/simple-action.component';\r\nimport { TxEditorCommand } from '../../services';\r\nimport { Provider } from '@angular/core';\r\n\r\nconst TX_ALIGN_ACTIONS_GROUP_ID = 1;\r\nconst TX_INDENT_ACTION_GROUP_ID = 2;\r\nconst TX_GENERAL_ACTIONS_GROUP_ID = 3;\r\n\r\nconst TX_BOLD_ACTION_MANIFEST: TxPluginManifest<TxSimpleActionComponent> = {\r\n  component: TxSimpleActionComponent,\r\n  componentOptions: {\r\n    commandName: TxEditorCommand.Bold,\r\n    icon: 'format_bold'\r\n  }\r\n};\r\nconst TX_ITALIC_ACTION_MANIFEST: TxPluginManifest<TxSimpleActionComponent> = {\r\n  component: TxSimpleActionComponent,\r\n  componentOptions: {\r\n    commandName: TxEditorCommand.Italic,\r\n    icon: 'format_italic'\r\n  }\r\n};\r\nconst TX_UNDERLINE_ACTION_MANIFEST: TxPluginManifest<TxSimpleActionComponent> = {\r\n  component: TxSimpleActionComponent,\r\n  componentOptions: {\r\n    commandName: TxEditorCommand.Underline,\r\n    icon: 'format_underline'\r\n  }\r\n};\r\nconst TX_STRIKE_THROUGH_ACTION_MANIFEST: TxPluginManifest<TxSimpleActionComponent> = {\r\n  component: TxSimpleActionComponent,\r\n  componentOptions: {\r\n    commandName: TxEditorCommand.StrikeThrough,\r\n    icon: 'format_strikethrough'\r\n  }\r\n};\r\n\r\nconst TX_ALIGN_JUSTIFY_ACTION_MANIFEST: TxPluginManifest<TxSimpleActionComponent> = {\r\n  groupID: TX_ALIGN_ACTIONS_GROUP_ID,\r\n  component: TxSimpleActionComponent,\r\n  componentOptions: {\r\n    commandName: TxEditorCommand.JustifyFull,\r\n    icon: 'format_align_justify'\r\n  }\r\n};\r\nconst TX_ALIGN_LEFT_ACTION_MANIFEST: TxPluginManifest<TxSimpleActionComponent> = {\r\n  groupID: TX_ALIGN_ACTIONS_GROUP_ID,\r\n  component: TxSimpleActionComponent,\r\n  componentOptions: {\r\n    commandName: TxEditorCommand.JustifyLeft,\r\n    icon: 'format_align_left'\r\n  }\r\n};\r\nconst TX_ALIGN_CENTER_ACTION_MANIFEST: TxPluginManifest<TxSimpleActionComponent> = {\r\n  groupID: TX_ALIGN_ACTIONS_GROUP_ID,\r\n  component: TxSimpleActionComponent,\r\n  componentOptions: {\r\n    commandName: TxEditorCommand.JustifyCenter,\r\n    icon: 'format_align_center'\r\n  }\r\n};\r\nconst TX_ALIGN_RIGHT_ACTION_MANIFEST: TxPluginManifest<TxSimpleActionComponent> = {\r\n  groupID: TX_ALIGN_ACTIONS_GROUP_ID,\r\n  component: TxSimpleActionComponent,\r\n  componentOptions: {\r\n    commandName: TxEditorCommand.JustifyRight,\r\n    icon: 'format_align_right'\r\n  }\r\n};\r\nconst TX_INDENT_INCREASE_ACTION_MANIFEST: TxPluginManifest<TxSimpleActionComponent> = {\r\n  groupID: TX_INDENT_ACTION_GROUP_ID,\r\n  component: TxSimpleActionComponent,\r\n  componentOptions: {\r\n    commandName: TxEditorCommand.Indent,\r\n    icon: 'format_indent_increase'\r\n  }\r\n};\r\nconst TX_INDENT_DECREASE_ACTION_MANIFEST: TxPluginManifest<TxSimpleActionComponent> = {\r\n  groupID: TX_INDENT_ACTION_GROUP_ID,\r\n  component: TxSimpleActionComponent,\r\n  componentOptions: {\r\n    commandName: TxEditorCommand.Outdent,\r\n    icon: 'format_indent_decrease'\r\n  }\r\n};\r\nconst TX_CLEAR_FORMAT_ACTION_MANIFEST: TxPluginManifest<TxSimpleActionComponent> = {\r\n  groupID: TX_GENERAL_ACTIONS_GROUP_ID,\r\n  component: TxSimpleActionComponent,\r\n  componentOptions: {\r\n    commandName: TxEditorCommand.RemoveFormat,\r\n    icon: 'format_clear'\r\n  }\r\n};\r\n\r\nexport const TX_SIMPLE_ACTION_PROVIDERS: Provider[] = [\r\n  providePluginManifest(TX_BOLD_ACTION_MANIFEST),\r\n  providePluginManifest(TX_ITALIC_ACTION_MANIFEST),\r\n  providePluginManifest(TX_UNDERLINE_ACTION_MANIFEST),\r\n  providePluginManifest(TX_STRIKE_THROUGH_ACTION_MANIFEST),\r\n\r\n  providePluginManifest(TX_ALIGN_JUSTIFY_ACTION_MANIFEST),\r\n  providePluginManifest(TX_ALIGN_LEFT_ACTION_MANIFEST),\r\n  providePluginManifest(TX_ALIGN_CENTER_ACTION_MANIFEST),\r\n  providePluginManifest(TX_ALIGN_RIGHT_ACTION_MANIFEST),\r\n\r\n  providePluginManifest(TX_INDENT_INCREASE_ACTION_MANIFEST),\r\n  providePluginManifest(TX_INDENT_DECREASE_ACTION_MANIFEST),\r\n\r\n  providePluginManifest(TX_CLEAR_FORMAT_ACTION_MANIFEST)\r\n];\r\n\r\n\r\n\r\n","module.exports = \".synonym-list {\\r\\n  position: absolute;\\r\\n  background: #ffffff;\\r\\n  border: 1px solid #bebebe;\\r\\n  box-shadow: 1px 1px 1px #bebebe;\\r\\n}\\r\\n\\r\\nul, li {\\r\\n  list-style: none;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  min-width: 150px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  background: none;\\r\\n  border: none;\\r\\n  width: 100%;\\r\\n  padding: 5px 15px 5px 15px;\\r\\n  font-size: 14px;\\r\\n  cursor: pointer;\\r\\n  text-align: left;\\r\\n  border-bottom: 1px solid #eee;\\r\\n}\\r\\n\\r\\nbutton:hover {\\r\\n  background: #f1f0f0;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  background-color: #e9e9e9;\\r\\n  border-bottom: 1px solid #ccc;\\r\\n  font-size: 14px;\\r\\n  padding: 4px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"synonym-list\\\" [hidden]=\\\"!synonyms?.length\\\" #list>\\n  <div class=\\\"title\\\">Replace with:</div>\\n  <ul>\\n    <li *ngFor=\\\"let synonym of synonyms\\\">\\n      <button (click)=\\\"onSelect(synonym.word)\\\">{{ synonym.word }}</button>\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { TxEditorActionService, TxEditorStateService } from '../../../../services';\nimport { TxSynonym, TxSynonymsService } from '../../services/synonyms/synonyms.service';\nimport { debounceTime, distinctUntilChanged, map, switchMap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { sortBy } from 'ramda';\n\n@Component({\n  selector: 'app-synonyms-action',\n  templateUrl: './synonyms-action.component.html',\n  styleUrls: [ './synonyms-action.component.css' ]\n})\nexport class TxSynonymsActionComponent implements OnInit, OnDestroy {\n  @ViewChild('list') list: ElementRef;\n\n  synonyms: TxSynonym[];\n\n  private subscription: Subscription;\n\n  constructor(\n    private editorStateService: TxEditorStateService,\n    private editorActionService: TxEditorActionService,\n    private synonymsService: TxSynonymsService,\n    private renderer: Renderer2\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.listenForSelection();\n  }\n\n  onSelect(synonym: string): void {\n    this.editorActionService.replaceSelectedText(synonym);\n    this.synonyms = [];\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  private listenForSelection(): void {\n    this.subscription = this.editorStateService.getSelection().pipe(\n      debounceTime(300),\n      map(selection => selection.toString().trim()),\n      distinctUntilChanged(),\n      switchMap(selectedText => this.synonymsService.getSynonyms(selectedText))\n    ).subscribe((synonyms: TxSynonym[]) => {\n      this.synonyms = sortBy(synonym => synonym.word, synonyms);\n      this.adjustListPosition();\n    });\n  }\n\n  private adjustListPosition() {\n    const selection = this.editorStateService.getSelectionSnapshot();\n    const el = this.list ? this.list.nativeElement : null;\n    if (el && selection.rangeCount) {\n      const range = selection.getRangeAt(0);\n      if (range) {\n        const rect = range.getBoundingClientRect();\n        this.renderer.setStyle(el, 'top', `${rect.top + rect.height + 2}px`);\n        this.renderer.setStyle(el, 'left', `${rect.left - 4}px`);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst SYNONYMS_URL = 'https://api.datamuse.com/words';\n\nexport interface TxSynonym {\n  word: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TxSynonymsService {\n  constructor(private http: HttpClient) {\n  }\n\n  getSynonyms(word: string): Observable<TxSynonym[]> {\n    return this.http.get<TxSynonym[]>(SYNONYMS_URL, {\n      params: {\n        rel_syn: word\n      }\n    });\n  }\n}\n","import {\r\n  providePluginManifest,\r\n  TxPluginManifest\r\n} from '../../tokens/editor-plugin-manifest/editor-plugin-manifest.token';\r\nimport { TxSynonymsActionComponent } from './components/synonyms-action/synonyms-action.component';\r\nimport { Provider } from '@angular/core';\r\n\r\nconst TX_SYNONYMS_ACTION_MANIFEST: TxPluginManifest<TxSynonymsActionComponent> = {\r\n  component: TxSynonymsActionComponent,\r\n  groupID: 100\r\n};\r\n\r\nexport const TX_SYNONYMS_ACTION_PROVIDER: Provider = providePluginManifest(TX_SYNONYMS_ACTION_MANIFEST);\r\n","import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nexport enum TxEditorCommand {\n  Bold = 'bold',\n  Indent = 'indent',\n  Italic = 'italic',\n  JustifyCenter = 'justifyCenter',\n  JustifyFull = 'justifyFull',\n  JustifyLeft = 'justifyLeft',\n  JustifyRight = 'justifyRight',\n  Outdent = 'outdent',\n  RemoveFormat = 'removeFormat',\n  StrikeThrough = 'strikeThrough',\n  Underline = 'underline',\n  ForeColor = 'foreColor',\n  StyleWithCSS = 'styleWithCSS'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TxEditorActionService {\n\n  constructor(@Inject(DOCUMENT) private document: Document) {\n  }\n\n  execCommand(command: TxEditorCommand, value?: any): boolean {\n    const range = this.getCurrentRangePosition();\n    const result = this.document.execCommand(command, false, value);\n    this.setNewRangePosition(range);\n    return result;\n  }\n\n  queryCommandState(command: TxEditorCommand): boolean {\n    return this.document.queryCommandState(command);\n  }\n\n  queryCommandValue(command: TxEditorCommand): string {\n    return this.document.queryCommandValue(command);\n  }\n\n  replaceSelectedText(text: string) {\n    const selection = this.document.getSelection();\n    if (selection.rangeCount) {\n      if (/.+?\\s+$/.test(selection.toString())) {\n        selection.extend(selection.focusNode, selection.focusOffset - 1);\n      }\n\n      const range = selection.getRangeAt(0);\n      range.deleteContents();\n      range.insertNode(this.document.createTextNode(text));\n    }\n  }\n\n  private getCurrentRangePosition(): Range | null {\n    const selection = this.document.getSelection();\n    if (selection && selection.type === 'Caret' && selection.getRangeAt && selection.rangeCount) {\n      return selection.getRangeAt(0);\n    }\n    return null;\n  }\n\n  private setNewRangePosition(range?: Range) {\n    if (range) {\n      const selection = this.document.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class TxEditorStateService {\r\n  private content: BehaviorSubject<string> = new BehaviorSubject('');\r\n  private selection: BehaviorSubject<Selection> = new BehaviorSubject(undefined);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  getContent(): Observable<string> {\r\n    return this.content;\r\n  }\r\n\r\n  setContent(content: string): void {\r\n    this.content.next(content);\r\n  }\r\n\r\n  getSelection(): Observable<Selection> {\r\n    return this.selection.pipe(\r\n      filter((state) => Boolean(state))\r\n    );\r\n  }\r\n\r\n  getSelectionSnapshot(): Selection {\r\n    return this.selection.getValue();\r\n  }\r\n\r\n  setSelection(selection: Selection): void {\r\n    this.selection.next(selection);\r\n  }\r\n}\r\n","export * from './editor-action/editor-action.service';\r\nexport * from './editor-state/editor-state.service';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\nimport {\r\n  TxBodyComponent,\r\n  TxControlPanelActionGroupComponent,\r\n  TxControlPanelComponent,\r\n  TxEditorComponent\r\n} from './components';\r\nimport { TX_PLUGINS_COMPONENTS, TX_PLUGINS_PROVIDERS } from './plugins';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    ColorPickerModule\r\n  ],\r\n  declarations: [\r\n    TxBodyComponent,\r\n    TxControlPanelComponent,\r\n    TxEditorComponent,\r\n    TxControlPanelActionGroupComponent,\r\n    ...TX_PLUGINS_COMPONENTS\r\n  ],\r\n  exports: [ TxEditorComponent ],\r\n  entryComponents: [ ...TX_PLUGINS_COMPONENTS ],\r\n  providers: [\r\n    ...TX_PLUGINS_PROVIDERS\r\n  ]\r\n})\r\nexport class TxEditorModule {\r\n}\r\n","import { InjectionToken, Provider, Type } from '@angular/core';\r\n\r\nexport interface TxPluginManifest<T = any> {\r\n  groupID?: string | number;\r\n  component: Type<T>;\r\n  componentOptions?: { [key in keyof T]?: T[key] };\r\n}\r\n\r\nexport const TX_EDITOR_PLUGIN_MANIFEST = new InjectionToken<TxPluginManifest[]>('TX_EDITOR_PLUGIN_MANIFEST');\r\n\r\nexport function providePluginManifest(pluginManifest: TxPluginManifest): Provider {\r\n  return {\r\n    provide: TX_EDITOR_PLUGIN_MANIFEST,\r\n    multi: true,\r\n    useValue: pluginManifest\r\n  };\r\n}\r\n","module.exports = \":host {\\r\\n  display: flex;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\nmain {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  flex: 1;\\r\\n}\\r\\n\"","module.exports = \"<main>\\r\\n  <app-editor [text]=\\\"text\\\"></app-editor>\\r\\n</main>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TextService } from '../../services/text-service/text.service';\r\n\r\n@Component({\r\n  selector: 'app-body',\r\n  templateUrl: './body.component.html',\r\n  styleUrls: [ './body.component.css' ]\r\n})\r\nexport class BodyComponent implements OnInit {\r\n  text: string;\r\n\r\n  constructor(private textService: TextService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.textService.getMockText().then(text => this.text = text);\r\n  }\r\n}\r\n","module.exports = \":host {\\r\\n  display: block;\\r\\n  height: 40px;\\r\\n  padding-left: 15px;\\r\\n  padding-top: 15px;\\r\\n  font-size: 24px;\\r\\n  border-bottom: 4px solid #ffa500;\\r\\n  background-color: rgba(33, 33, 33, 0.5);\\r\\n  color: #fff;\\r\\n}\\r\\n\"","module.exports = \"<span>{{title}}</span>\\r\\n\"","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: [ './header.component.css' ]\r\n})\r\nexport class HeaderComponent {\r\n  @Input() title = '';\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TextService {\r\n  getMockText() {\r\n    return new Promise<string>(function (resolve) {\r\n      resolve('A year ago I was in the audience at a gathering of designers in San Francisco. ' +\r\n        'There were four designers on stage, and two of them worked for me. I was there to support them. ' +\r\n        'The topic of design responsibility came up, possibly brought up by one of my designers, I honestly don’t remember the details. ' +\r\n        'What I do remember is that at some point in the discussion I raised my hand and suggested, to this group of designers, ' +\r\n        'that modern design problems were very complex. And we ought to need a license to solve them.');\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}